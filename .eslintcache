[{"/home/navin/Documents/instachat/src/index.js":"1","/home/navin/Documents/instachat/src/App.js":"2","/home/navin/Documents/instachat/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610184148215,"results":"4","hashOfConfig":"5"},{"size":2949,"mtime":1610195685545,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610184148215,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"mkp8yd",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/navin/Documents/instachat/src/index.js",[],["17","18"],"/home/navin/Documents/instachat/src/App.js",["19","20","21","22","23"],"import logo from \"./logo.svg\";\nimport React, { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBRC-sBfPLNy2i4aOrDfEbCj8QrbhCfUwg\",\n  authDomain: \"instachat-b7e61.firebaseapp.com\",\n  projectId: \"instachat-b7e61\",\n  storageBucket: \"instachat-b7e61.appspot.com\",\n  messagingSenderId: \"959854584921\",\n  appId: \"1:959854584921:web:931e18fe31a96f1db4bd48\",\n  measurementId: \"G-WTZYR4YDT8\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  // const usersRef = firestore.collection(\"users\");\n\n  const SignInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n\n    // if (auth.currentUser) {\n    //   usersRef.doc(auth.currentUser.uid).add({\n    //     id: auth.currentUser.uid,\n    //     photoURL: auth.currentUser.photoURL,\n    //     createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    //   });\n    // }\n  };\n  return <button onClick={SignInWithGoogle}> Sign in with Google</button>;\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && <button onClick={() => auth.signOut()}>sign out</button>\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n        <div ref={dummy}></div>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n  return (\n    <div className={\"message ${messageClass}\"}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default App;\n","/home/navin/Documents/instachat/src/reportWebVitals.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":55,"column":10,"nodeType":"32","messageId":"33","endLine":55,"endColumn":17},{"ruleId":"30","severity":1,"message":"35","line":109,"column":9,"nodeType":"32","messageId":"33","endLine":109,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":112,"column":21,"nodeType":"38","messageId":"39","endLine":112,"endColumn":46},{"ruleId":"40","severity":1,"message":"41","line":113,"column":7,"nodeType":"42","endLine":113,"endColumn":29},{"ruleId":"26","replacedBy":"43"},{"ruleId":"28","replacedBy":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SignOut' is defined but never used.","'messageClass' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["45"],["46"],"no-global-assign","no-unsafe-negation"]